knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=5, fig.height=5, fig.path='./figures/', dev=c('png', 'pdf'))
setwd(".")
library(sqldf)
library(xtable)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=5, fig.height=5, fig.path='./figures/', dev=c('png', 'pdf'))
setwd(".")
library(sqldf)
library(xtable)
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
repackaged <- sqldf("select repackaged from apps ")
colnames(repackaged)
colnames(apps)
avclass <- read.csv("avClassResultRepackaged.csv", head=T, sep=',')
nrow(avclass)
result <- read.csv("../methods_explored/output/diffs/summary.csv")
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
repackaged <- sqldf("select repackaged from apps ")
colnames(repackaged)
colnames(apps)
avclass <- read.csv("avClassResultRepackaged.csv", head=T, sep=',')
nrow(avclass)
result <- read.csv("/methods_explored/output/diffs/summary.csv")
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
repackaged <- sqldf("select repackaged from apps ")
colnames(repackaged)
colnames(apps)
avclass <- read.csv("avClassResultRepackaged.csv", head=T, sep=',')
nrow(avclass)
result <- read.csv("methods_explored/output/diffs/summary.csv")
result <- sqldf("select * from result")
apphash <- read.csv("sampleAppHash.csv", head=T, sep=',')
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
repackaged <- sqldf("select repackaged from apps ")
colnames(repackaged)
colnames(apps)
avclass <- read.csv("avClassResultRepackaged.csv", head=T, sep=',')
nrow(avclass)
result <- read.csv("methods_explored/output/diffs/summary.csv")
result <- sqldf("select * from result")
apphash <- read.csv("sampleAppHash.csv", head=T, sep=',')
apphash <- sqldf("select * from apphash")
nrow(apphash)
firstPart <- sqldf("select h.dataset as source, h.hash as sha256original, h2.hash as sha256,
case
when (r.methods_in_diff = '0') THEN 'False'
Else 'True'
END as apidetected
from result r
inner join apphash h on h.app = r.apk
inner join apphash h2 on h2.app = r.apk
where h.type = 'benign' and h2.type = 'malicious'")
simiResults <- read.csv("summarySimiDroid.csv", head=T)
simiResults <- sqldf("select * from simiResults")
secondPart <- sqldf("select f.source, f.sha256original, f.sha256,f.apidetected,s.identical, s.similar, s.new, s.deleted, s.similarity from firstPart f
inner join simiResults s on s.sha256original = f.sha256original and s.sha256 = f.sha256")
originalFamily <- read.csv("originalSampleFamily.csv", head=T, sep=',')
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
repackaged <- sqldf("select repackaged from apps ")
colnames(repackaged)
colnames(apps)
avclass <- read.csv("avClassResultRepackaged.csv", head=T, sep=',')
nrow(avclass)
result <- read.csv("methods_explored/output/diffs/summary.csv")
result <- sqldf("select * from result")
apphash <- read.csv("sampleAppHash.csv", head=T, sep=',')
apphash <- sqldf("select * from apphash")
nrow(apphash)
firstPart <- sqldf("select h.dataset as source, h.hash as sha256original, h2.hash as sha256,
case
when (r.methods_in_diff = '0') THEN 'False'
Else 'True'
END as apidetected
from result r
inner join apphash h on h.app = r.apk
inner join apphash h2 on h2.app = r.apk
where h.type = 'benign' and h2.type = 'malicious'")
simiResults <- read.csv("summarySimiDroid.csv", head=T)
simiResults <- sqldf("select * from simiResults")
secondPart <- sqldf("select f.source, f.sha256original, f.sha256,f.apidetected,s.identical, s.similar, s.new, s.deleted, s.similarity from firstPart f
inner join simiResults s on s.sha256original = f.sha256original and s.sha256 = f.sha256")
originalFamily <- read.csv("originalSampleFamily.csv", head=T, sep=',')
originalFamily <- sqldf("select * from originalFamily ")
malwareFamily <- read.csv("repackageSampleFamily.csv", head=T, sep=',')
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
repackaged <- sqldf("select repackaged from apps ")
colnames(repackaged)
colnames(apps)
avclass <- read.csv("avClassResultRepackaged.csv", head=T, sep=',')
nrow(avclass)
result <- read.csv("methods_explored/output/diffs/summary.csv")
result <- sqldf("select * from result")
apphash <- read.csv("sampleAppHash.csv", head=T, sep=',')
apphash <- sqldf("select * from apphash")
nrow(apphash)
firstPart <- sqldf("select h.dataset as source, h.hash as sha256original, h2.hash as sha256,
case
when (r.methods_in_diff = '0') THEN 'False'
Else 'True'
END as apidetected
from result r
inner join apphash h on h.app = r.apk
inner join apphash h2 on h2.app = r.apk
where h.type = 'benign' and h2.type = 'malicious'")
simiResults <- read.csv("summarySimiDroid.csv", head=T)
simiResults <- sqldf("select * from simiResults")
secondPart <- sqldf("select f.source, f.sha256original, f.sha256,f.apidetected,s.identical, s.similar, s.new, s.deleted, s.similarity from firstPart f
inner join simiResults s on s.sha256original = f.sha256original and s.sha256 = f.sha256")
originalFamily <- read.csv("originalSampleFamily.csv", head=T, sep=',')
originalFamily <- sqldf("select * from originalFamily ")
malwareFamily <- read.csv("repackageSampleFamily.csv", head=T, sep=',')
malwareFamily <- sqldf("select * from malwareFamily")
vendorCkeck <- read.csv("vendorCkeck.csv", head=T, sep=',')
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
repackaged <- sqldf("select repackaged from apps ")
colnames(repackaged)
colnames(apps)
avclass <- read.csv("avClassResultRepackaged.csv", head=T, sep=',')
nrow(avclass)
result <- read.csv("methods_explored/output/diffs/summary.csv")
result <- sqldf("select * from result")
apphash <- read.csv("sampleAppHash.csv", head=T, sep=',')
apphash <- sqldf("select * from apphash")
nrow(apphash)
firstPart <- sqldf("select h.dataset as source, h.hash as sha256original, h2.hash as sha256,
case
when (r.methods_in_diff = '0') THEN 'False'
Else 'True'
END as apidetected
from result r
inner join apphash h on h.app = r.apk
inner join apphash h2 on h2.app = r.apk
where h.type = 'benign' and h2.type = 'malicious'")
simiResults <- read.csv("summarySimiDroid.csv", head=T)
simiResults <- sqldf("select * from simiResults")
secondPart <- sqldf("select f.source, f.sha256original, f.sha256,f.apidetected,s.identical, s.similar, s.new, s.deleted, s.similarity from firstPart f
inner join simiResults s on s.sha256original = f.sha256original and s.sha256 = f.sha256")
originalFamily <- read.csv("originalSampleFamily.csv", head=T, sep=',')
originalFamily <- sqldf("select * from originalFamily ")
malwareFamily <- read.csv("repackageSampleFamily.csv", head=T, sep=',')
malwareFamily <- sqldf("select * from malwareFamily")
vendorCkeck <- read.csv("vendorCkeck.csv", head=T, sep=',')
vendorCkeck <- sqldf("select * from vendorCkeck")
thirdPart <- sqldf("select se.source, se.sha256original, o.benign ,se.sha256, r.family,
case
when ((r.family = 'None' and v.qtdvendor = '0')
or (r.family = 'None' and v.qtdvendor = '1'))THEN 'False'
Else 'True'
END as malware,v.qtdvendor as qtdvendor,
se.apidetected,se.identical, se.similar, se.new, se.deleted, se.similarity from secondPart se
left join originalFamily o on o.hash = se.sha256original
left join malwareFamily r on r.sha256repackage = se.sha256
inner join vendorCkeck v on v.hash = se.sha256")
param_trace_diff <- read.csv("param_trace_diff.csv", head=T, sep=',')
param_trace_diff <- sqldf("select * from param_trace_diff ")
lastPart <- sqldf("select t.source as source, t.sha256original as sha256original, t.benign as benign, t.sha256 as sha256,
t.family as family, t.malware as malware,t.qtdvendor, t.apidetected as apidetected,tp.param_methods_in_diff as paramdetected, tp.trace_in_diff as tracedetected,                  t.identical as identical, t.similar as similar, t.new as new, t.deleted as deleted, t.similarity as similarity from thirdPart t
inner join param_trace_diff tp on tp.original = t.sha256original
and tp.repackaged = t.sha256")
write.csv(lastPart, "sample_final_ds_before_VT_check.csv", quote = F, row.names = F)
large_ds = sqldf("select * from lastPart where benign = 'True'")
write.csv(large_ds, "large_ds.csv", quote = F, row.names = F)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=5, fig.height=5, fig.path='./figures/', dev=c('png', 'pdf'))
setwd(".")
library(sqldf)
library(xtable)
#Load the Datasets
apps <- read.csv("appsHash.csv", head=T, sep=',')
repackaged <- sqldf("select repackaged from apps ")
colnames(repackaged)
colnames(apps)
avclass <- read.csv("avClassResultRepackaged.csv", head=T, sep=',')
nrow(avclass)
result <- read.csv("methods_explored/output/diffs/summary.csv")
result <- sqldf("select * from result")
apphash <- read.csv("sampleAppHash.csv", head=T, sep=',')
apphash <- sqldf("select * from apphash")
nrow(apphash)
firstPart <- sqldf("select h.dataset as source, h.hash as sha256original, h2.hash as sha256,
case
when (r.methods_in_diff = '0') THEN 'False'
Else 'True'
END as apidetected
from result r
inner join apphash h on h.app = r.apk
inner join apphash h2 on h2.app = r.apk
where h.type = 'benign' and h2.type = 'malicious'")
simiResults <- read.csv("summarySimiDroid.csv", head=T)
simiResults <- sqldf("select * from simiResults")
secondPart <- sqldf("select f.source, f.sha256original, f.sha256,f.apidetected,s.identical, s.similar, s.new, s.deleted, s.similarity from firstPart f
inner join simiResults s on s.sha256original = f.sha256original and s.sha256 = f.sha256")
originalFamily <- read.csv("originalSampleFamily.csv", head=T, sep=',')
originalFamily <- sqldf("select * from originalFamily ")
malwareFamily <- read.csv("repackageSampleFamily.csv", head=T, sep=',')
malwareFamily <- sqldf("select * from malwareFamily")
vendorCkeck <- read.csv("vendorCkeck.csv", head=T, sep=',')
vendorCkeck <- sqldf("select * from vendorCkeck")
thirdPart <- sqldf("select se.source, se.sha256original, o.benign ,se.sha256, r.family,
case
when ((r.family = 'None' and v.qtdvendor = '0')
or (r.family = 'None' and v.qtdvendor = '1'))THEN 'False'
Else 'True'
END as malware,v.qtdvendor as qtdvendor,
se.apidetected,se.identical, se.similar, se.new, se.deleted, se.similarity from secondPart se
left join originalFamily o on o.hash = se.sha256original
left join malwareFamily r on r.sha256repackage = se.sha256
inner join vendorCkeck v on v.hash = se.sha256")
param_trace_diff <- read.csv("param_trace_diff.csv", head=T, sep=',')
param_trace_diff <- sqldf("select * from param_trace_diff ")
lastPart <- sqldf("select t.source as source, t.sha256original as sha256original, t.benign as benign, t.sha256 as sha256,
t.family as family, t.malware as malware,t.qtdvendor, t.apidetected as apidetected,tp.param_methods_in_diff as paramdetected, tp.trace_in_diff as tracedetected,                  t.identical as identical, t.similar as similar, t.new as new, t.deleted as deleted, t.similarity as similarity from thirdPart t
inner join param_trace_diff tp on tp.original = t.sha256original
and tp.repackaged = t.sha256")
write.csv(lastPart, "sample_final_ds_before_VT_check.csv", quote = F, row.names = F)
large_ds = sqldf("select * from lastPart where benign = 'True'")
write.csv(large_ds, "large_ds.csv", quote = F, row.names = F)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=5, fig.height=5, fig.path='./figures/', dev=c('png', 'pdf'))
setwd(".")
library(sqldf)
library(xtable)
full_ds <- read.csv("large_ds.csv", head=T, sep=',')
small_ds <- read.csv("small_ds.csv", head=T, sep=',')
full_ds$similarity = as.numeric(as.character(full_ds$similarity))
#full_ds = sqldf("select * from full_ds where family in (select family from small_ds where family <> 'None')
#                and family <> 'gappusin'")
nrow(full_ds)
nrow(small_ds)
sqldf("select malware, count(*) from full_ds group by malware")
sqldf("select apidetected, count(*) from full_ds group by apidetected")
sqldf("select malware, apidetected, count(*)
from full_ds
group by malware, apidetected")
sqldf("select apidetected, count(*) from small_ds group by apidetected")
sqldf("select malware, apidetected, count(*)
from small_ds
group by malware, apidetected")
sqldf("select malware, apidetected, count(*)
from small_ds
group by malware, apidetected")
rp <- sqldf("select count(*) from small_ds where malware = 'True'")
tp <- sqldf("select * from small_ds where malware = 'True' and apidetected = 'True'" )
fp <- sqldf("select * from small_ds where malware = 'False' and apidetected = 'True'" )
fn <- sqldf("select * from small_ds where malware = 'True' and apidetected = 'False'" )
precision = nrow(tp) / (nrow(tp) + nrow(fp))
recall = nrow(tp) / (nrow(tp) + nrow(fn))
fscore = 2 * (precision*recall) / (precision + recall)
precision
recall
fscore
summary(small_ds$similarity)
sd(small_ds$similarity)
total <- nrow(small_ds)
totalNoFamily <- nrow(sqldf("select * from small_ds where family = 'None'"))
percentageWithFamily <- 100 - (totalNoFamily * 100 / total)
percentageWithFamily
families <- sqldf("select family, count(*) as Total
from small_ds where family != 'None'
group by family
order by 2 desc")
families["Percentage"] <- families$Total * 100 / percentageWithFamily
sqldf("select family, percentage from families order by 2 desc")
tp <- sqldf("select * from full_ds where malware = 'True' and apidetected = 'True'" )
fp <- sqldf("select * from full_ds where malware = 'False' and apidetected = 'True'" )
fn <- sqldf("select * from full_ds where malware = 'True' and apidetected = 'False'" )
precision = nrow(tp) / (nrow(tp) + nrow(fp))
recall = nrow(tp) / (nrow(tp) + nrow(fn))
fscore = 2 * (precision*recall) / (precision + recall)
precision
recall
fscore
summary(full_ds$similarity)
sd(full_ds$similarity)
sqldf("select count(*) from full_ds where similarity = 0")
sqldf("select count(*) from full_ds where similarity < 0.25")
sqldf("select count(*)  from full_ds where similarity >= 0.25 and similarity < 0.5")
sqldf("select count(*)  from full_ds where similarity >= 0.5 and similarity < 0.75")
sqldf("select count(*)  from full_ds where similarity >= 0.75")
sqldf("select count(*)  from full_ds where similarity >= 0.90")
#s1 <- sqldf("select ds.*, 'True' as h1
#             from full_ds ds
#             where (malware = 'True' and apidetected = 'True') or
#                   (malware = 'False' and apidetected = 'False')")
s1 <- sqldf("select ds.*, 'True' as h1
from full_ds ds
where (malware = 'True' and apidetected = 'True')")
s2 <- sqldf("select ds.*, 'False' as h1
from full_ds ds
where (malware = 'True' and apidetected = 'False') or
(malware = 'False' and apidetected = 'True')")
ds <- rbind(s1, s2)
ds$h1 <- as.factor(ds$h1)
# cor.test(ds$h1, ds$similarity)
nrow(ds)
sqldf("select h1, count(*) from ds group by h1")
model <- glm(h1~similarity, data=ds, family = "binomial")
summary(model)
set.seed(123)
km.res <- kmeans(ds$similarity, 10)
print(km.res$centers)
dd <- cbind(ds, cluster = km.res$cluster)
s1 <- sqldf("select cluster, count(*) as total from dd group by cluster")
s2 <- sqldf("select cluster, count(*) as hits from dd where h1 = 'True' group by cluster")
dd = merge(s1, s2)
dd["Percentage"] = dd$hits * 100 / dd$total
dd
cs = data.frame("cluster" = c(1,2,3,4,5, 6, 7, 8, 9, 10),
"averageSimilarity" = km.res$centers)
cs = merge(dd, cs)
colnames(cs)
xtable(sqldf("select cluster, averageSimilarity, total, hits, percentAGE
from cs
order by averageSimilarity"))
summary(small_ds$similarity)
summary(full_ds$similarity)
sd(small_ds$similarity)
sd(full_ds$similarity)
sds <- sqldf("select similarity, 'Small Dataset' as dataset from small_ds")
cds <- sqldf("select similarity, 'Complete Dataset' as dataset from full_ds")
ds <- rbind(sds, cds)
ds$dataset <- factor(ds$dataset , levels=c("Small Dataset", "Complete Dataset"))
boxplot(similarity~dataset, data = ds, xlab="Datasets", ylab="Similarity Score", col = c("gray"), outline=F)
tp <- sqldf("select * from full_ds where malware = 'True' and (apidetected = 'True' or paramdetected = 'True')" )
fp <- sqldf("select * from full_ds where malware = 'False' and (apidetected = 'True' or paramdetected = 'True')" )
fn <- sqldf("select * from full_ds where malware = 'True' and (apidetected = 'False' and paramdetected = 'False')" )
precision = nrow(tp) / (nrow(tp) + nrow(fp))
recall = nrow(tp) / (nrow(tp) + nrow(fn))
fscore = 2 * (precision*recall) / (precision + recall)
precision
recall
fscore
nrow(tp)
nrow(fp)
nrow(fn)
tp <- sqldf("select * from full_ds where malware = 'True' and (apidetected = 'True' or tracedetected = 'True')" )
fp <- sqldf("select * from full_ds where malware = 'False' and (apidetected = 'True' or tracedetected = 'True')" )
fn <- sqldf("select * from full_ds where malware = 'True' and (apidetected = 'False' and tracedetected = 'False')" )
precision = nrow(tp) / (nrow(tp) + nrow(fp))
recall = nrow(tp) / (nrow(tp) + nrow(fn))
fscore = 2 * (precision*recall) / (precision + recall)
precision
recall
fscore
nrow(tp)
nrow(fp)
nrow(fn)
tp <- sqldf("select * from full_ds where malware = 'True' and (apidetected = 'True' or tracedetected = 'True' or paramdetected = 'True')" )
fp <- sqldf("select * from full_ds where malware = 'False' and (apidetected = 'True' or tracedetected = 'True' or paramdetected = 'True')" )
fn <- sqldf("select * from full_ds where malware = 'True' and (apidetected = 'False' and tracedetected = 'False' and paramdetected = 'False')" )
precision = nrow(tp) / (nrow(tp) + nrow(fp))
recall = nrow(tp) / (nrow(tp) + nrow(fn))
fscore = 2 * (precision*recall) / (precision + recall)
precision
recall
fscore
nrow(tp)
nrow(fp)
nrow(fn)
sqldf("select malware, apidetected, count(*)
from full_ds
where family = 'gappusin'
group by malware, apidetected")
tp <- sqldf("select * from full_ds where malware = 'True' and apidetected = 'True' and family
not in ('revmob','gappusin')
")
fp <- sqldf("select * from full_ds where malware = 'False' and apidetected = 'True'")
fn <- sqldf("select * from full_ds where malware = 'True' and apidetected = 'False' and family
not in ('revmob','gappusin')
")
precision = nrow(tp) / (nrow(tp) + nrow(fp))
recall = nrow(tp) / (nrow(tp) + nrow(fn))
fscore = 2 * (precision*recall) / (precision + recall)
precision
recall
fscore
gappusin <- sqldf("select * from full_ds where family =  'gappusin'")
summary(gappusin$similarity)
sd(gappusin$similarity)
hist(gappusin$similarity, main="", xlab="Similarity Score", ylab="Frequency", col = c("gray"))
sqldf("select family, count(*)
from full_ds
where malware = 'True'
group by family order by 2 desc")
sqldf("select malware, apidetected, count(*)
from full_ds
where family = 'gappusin'
group by malware, apidetected")
sqldf("select count(distinct family) from full_ds")
totalWithFamily <- nrow(sqldf("select * from full_ds where malware = 'True'"))
families <- sqldf("select family, count(*) as Total
from full_ds
group by family
order by 2 desc")
families["Percentage"] <- families["Total"] * 100 / totalWithFamily
sqldf("select family, Percentage
from families where family <> 'None'
order by 2 desc")
tp <- sqldf("select * from full_ds where (malware = 'True' or qtdvendor = 1) and apidetected = 'True'")
fp <- sqldf("select * from full_ds where (malware = 'False' and qtdvendor = 0) and apidetected = 'True'")
fn <- sqldf("select * from full_ds where (malware = 'True' or qtdvendor = 1) and apidetected = 'False'" )
precision1V = nrow(tp) / (nrow(tp) + nrow(fp))
recall1V = nrow(tp) / (nrow(tp) + nrow(fn))
fscore1V = 2 * (precision1V*recall1V) / (precision1V + recall1V)
precision1V
recall1V
fscore1V
